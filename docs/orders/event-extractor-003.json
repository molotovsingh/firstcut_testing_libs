{
  "order_id": "event-extractor-003",
  "priority": "high",
  "supercontext": {
    "repository": "docling_langextract_testing",
    "mission": "Finish the multi-provider event extractor rollout by implementing the outstanding adapters, tests, and verification required by event-extractor-002."
  },
  "goal": "Ship working OpenRouter and OpenCode Zen adapters with documentation and test evidence so EVENT_EXTRACTOR can switch providers without code edits.",
  "execution_instructions": [
    "Review docs/guides/provider_integration_guide.md and docs/reference/configuration.md before coding.",
    "Work through tasks in order. If a step cannot be completed, stop and escalate instead of improvising.",
    "Record documentation and test outcomes in your work summary (updated vs. not needed, pass/fail/skip)."
  ],
  "tasks": [
    {
      "id": "openrouter-adapter",
      "description": "Add OpenRouter support end to end.",
      "steps": [
        "Extend src/core/config.py with OpenRouterConfig (API key, base URL, model, timeout) using env helpers.",
        "Create src/core/openrouter_adapter.py implementing the EventExtractor protocol (lazy-import HTTP client, map responses to EventRecord, return fallback on failure).",
        "Register the provider in EVENT_PROVIDER_REGISTRY via a factory function and update tests to cover registry routing when EVENT_EXTRACTOR=openrouter.",
        "Mock HTTP calls in unit tests so no network access is needed; confirm missing credentials raise ExtractorConfigurationError." 
      ]
    },
    {
      "id": "opencodezen-adapter",
      "description": "Repeat the pattern for OpenCode Zen.",
      "steps": [
        "Add OpenCodeZenConfig in src/core/config.py (API key, base URL, model, timeout).",
        "Implement src/core/opencode_zen_adapter.py mirroring the OpenRouter adapter, including availability checks and fallback records.",
        "Register the provider factory and create unit tests that mock responses and validate error handling." 
      ]
    },
    {
      "id": "docs-and-env",
      "description": "Confirm documentation reflects the new providers.",
      "steps": [
        "Update README.md and AGENTS.md with clear instructions for selecting OpenRouter/OpenCode Zen (reference the new guide).",
        "Verify docs/guides/provider_integration_guide.md and docs/reference/configuration.md remain accurate after implementation; adjust if behaviour differs.",
        "Ensure .env.example placeholders align with any new config fields (temperature, timeout defaults, etc.)." 
      ]
    },
    {
      "id": "test-and-verify",
      "description": "Prove the adapters work or document why they are skipped.",
      "steps": [
        "Run unit tests covering the new adapters and registry selection (e.g., uv run python -m pytest tests/test_extractor_factory.py tests/test_openrouter_adapter.py ...).",
        "If credentials exist, run provider-specific smoke tests; otherwise capture skip output and mention missing keys in the summary.",
        "Store any logs or reports under docs/reports/ if generated, or note 'no artifacts produced'." 
      ]
    }
  ],
  "acceptance_criteria": [
    "EVENT_EXTRACTOR accepts 'langextract', 'openrouter', or 'opencode_zen' and instantiates the correct adapter via the registry.",
    "Both new adapters validate credentials, return EventRecord objects on success, and surface actionable errors when configuration is incomplete.",
    "README.md, AGENTS.md, and configuration docs describe how to enable each provider and which env vars are required.",
    "Test results (pass/fail/skip with reason) are documented so compliance is auditable."
  ],
  "constraints": {
    "what_not_to_do": [
      "Do not hardcode API keys, tokens, or provider selections in code.",
      "Do not remove existing LangExtract behaviour; new providers must be additive.",
      "Do not hit external APIs during tests; rely on mocks unless explicit credentials are provided." 
    ],
    "escalation_guidance": "Pause and request guidance if required SDKs are unavailable or network access is blockedâ€”do not bypass security restrictions."
  }
}
